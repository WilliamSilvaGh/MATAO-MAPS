@page "/usuario/admin/create"
@using MataoMaps.Domain.DTOs.Usuario.Request

<!-- Formulário de Criação de Admin -->
<div class="align">
    <EditForm Model="@usuarioAdicionarRequest" OnValidSubmit="@AdicionarUsuario">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <InputText id="Nome" @bind-Value="usuarioAdicionarRequest.Nome" placeholder="Nome Completo" class="text-input" />
        </div>

        <div class="form-group">
            <InputText id="EmailLogin" @bind-Value="usuarioAdicionarRequest.EmailLogin" placeholder="Email" class="text-input" />
        </div>

        <div class="form-group">
            <InputText id="EmailLoginConfirmacao" @bind-Value="usuarioAdicionarRequest.EmailLoginConfirmacao" placeholder="Confirme o Email" class="text-input" />
        </div>

        <div class="form-group">
            <InputText id="Senha" @bind-Value="usuarioAdicionarRequest.Senha" placeholder="Senha" type="password" class="text-input" />
        </div>

        <div class="form-group">
            <InputText id="SenhaConfirmacao" @bind-Value="usuarioAdicionarRequest.SenhaConfirmacao" placeholder="Confirme a senha" type="password" class="text-input" />
        </div>

        <div class="form-group">
            <button type="submit" class="btn-publicar" disabled="@isLoading">
                @if (isLoading)
                {
                    <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                    <span class="visually-hidden">Loading...</span>
                }
                else
                {
                    <span>Criar Administrador</span>
                }
            </button>
        </div>
    </EditForm>
</div>

<RadzenNotification />

<style>
    .text-input {
        width: 80%;
        border: none;
        border-radius: 2rem;
        height: 2rem;
        padding: 1.5rem;
        margin: 2rem auto;
        display: block;
        outline: none;
        background-color: #e8e8e8;
    }

    .align {
        text-align: center; /* Alinha o conteúdo ao centro */
        background-color: #FFFFFF;
        width: 100%;
        position: relative;
        display: flex;
        flex-direction: column;
        min-height: 100vh;
    }

    .btn-publicar {
        display: block;
        width: 80%;
        margin: 1rem auto;
        padding: 0.75rem;
        border: none;
        border-radius: 2rem;
        background-color: #3685cd;
        color: white;
        font-weight: bold;
        font-size: 1rem;
        text-align: center;
        cursor: pointer;
        transition: background-color 0.3s;
        z-index: 10;
        position: relative;
        margin-top: 3rem;
    }

        .btn-publicar:hover {
            background-color: #0056b3;
        }
</style>

@code {
    UsuarioAdicionarRequest usuarioAdicionarRequest = new UsuarioAdicionarRequest();
    public bool isLoading = false;

    protected override void OnInitialized()
    {
        PageTitleService.SetPageTitle("CRIAR ADMINISTRADOR");
        BackgroundColorService.SetBackgroundColor("#FFFFFF");
    }

    public async Task AdicionarUsuario()
    {
        isLoading = true;
        try
        {
            usuarioAdicionarRequest.EhAdmin = true;

            var response = await HttpClient.PostAsJsonAsync("usuario/adicionar", usuarioAdicionarRequest);
            if (response.IsSuccessStatusCode)
            {
                // Exibir notificação de sucesso
                NavigationManager.NavigateTo("/usuario/list");
            }
            else
            {
                // Exibir notificação de erro
            }
        }
        catch (Exception ex)
        {
            // Exibir notificação de erro
        }
        finally
        {
            isLoading = false;
        }
    }
}
