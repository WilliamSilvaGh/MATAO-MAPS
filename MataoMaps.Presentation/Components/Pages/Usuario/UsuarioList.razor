@page "/usuario/list"
@using System.Text.Json

@inject HttpClient HttpClient
@inject NavigationManager NavigationManager

<div class="container mt-4">
    <button class="btn mt-4 mb-3 rounded-circle d-flex align-items-center justify-content-center" style="width: 48px; background-color: #E8E8E8;" @onclick="GoBack">
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="32" fill="currentColor" class="bi bi-arrow-left d-flex justify-content-center" viewBox="0 0 16 16">
            <path fill-rule="evenodd" d="M15 8a.5.5 0 0 0-.5-.5H2.707l3.147-3.146a.5.5 0 1 0-.708-.708l-4 4a.5.5 0 0 0 0 .708l4 4a.5.5 0 0 0 .708-.708L2.707 8.5H14.5A.5.5 0 0 0 15 8" />
        </svg>
    </button>

    <div class="table-responsive">
        <table class="table table-bordered">
            <thead>
                <tr class="text-center" style="background-color: #E8E8E8;">
                    <th>Nome</th>
                    <th>Administrador</th>
                    <th>Ações</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var usuario in _listUsuarioListarResponse)
                {
                    <tr class="text-center">
                        <td style="text-transform: capitalize;">@usuario.Nome</td>
                        <td>@(usuario.EhAdmin ? "Sim" : "Não")</td>
                        <td class="d-flex">
                            <button class="btn btn-primary w-100" @onclick="() => ConfirmarExclusao(usuario.Id)">
                                <i class="fa-solid fa-trash"></i>
                            </button>
                            <button class="btn btn-primary w-100 ms-2" @onclick="() => ConfirmarEdicao(usuario.Id)">
                                <i class="fa-solid fa-pen-to-square"></i>
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <RadzenNotification />

    <!-- Modal de Exclusão -->
    <div class="modal" style="display: @(modalExclusao ? "block" : "none")" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title text-black">Confirmação de Exclusão</h5>
                    <button type="button" class="btn-close" @onclick="CancelarExclusao" aria-label="Close"></button>
                </div>
                <div class="modal-body text-black">
                    <p>Deseja realmente excluir este usuário?</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" @onclick="CancelarExclusao">Cancelar</button>
                    <button type="button" class="btn btn-danger" @onclick="ConfirmarExclusaoUsuario">Confirmar</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal de Edição -->
    <div class="modal" style="display: @(modalEdicao ? "block" : "none")" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title text-black">Confirmação de Alteração de Visibilidade</h5>
                    <button type="button" class="btn-close" @onclick="CancelarEdicao" aria-label="Close"></button>
                </div>
                <div class="modal-body text-black">
                    <p>Deseja realmente alterar a visibilidade deste usuário?</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" @onclick="CancelarEdicao">Cancelar</button>
                    <button type="button" class="btn btn-primary" @onclick="ConfirmarEdicaoUsuario">Confirmar</button>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .container {
        color: black;
    }
</style>

@code {
    private List<UsuarioListarResponse> _listUsuarioListarResponse = new();
    private bool modalExclusao = false;
    private bool modalEdicao = false;
    private Guid usuarioIdExclusao;
    private Guid usuarioIdEdicao;

    protected override void OnInitialized()
    {
        PageTitleService.SetPageTitle("LISTAR USUÁRIOS");
        BackgroundColorService.SetBackgroundColor("#FFFFFF");
    }


    protected override async Task OnInitializedAsync()
    {
        await CarregarUsuarios();
    }

    private async Task CarregarUsuarios()
    {
        var response = await HttpClient.GetAsync("usuario/listar");

        if (response.IsSuccessStatusCode)
        {
            var content = await response.Content.ReadAsStringAsync();
            var optionsJson = new JsonSerializerOptions { PropertyNameCaseInsensitive = true };
            _listUsuarioListarResponse = JsonSerializer.Deserialize<List<UsuarioListarResponse>>(content, optionsJson) ?? new List<UsuarioListarResponse>();
        }
    }

    private void GoBack()
    {
        NavigationManager.NavigateTo("/area-adm");
    }

    private void ConfirmarExclusao(Guid usuarioId)
    {
        usuarioIdExclusao = usuarioId;
        modalExclusao = true;
    }

    private void CancelarExclusao()
    {
        modalExclusao = false;
    }

    private async Task ConfirmarExclusaoUsuario()
    {
        var response = await HttpClient.DeleteAsync($"usuario/{usuarioIdExclusao}");
        if (response.IsSuccessStatusCode)
        {
            _listUsuarioListarResponse.RemoveAll(u => u.Id == usuarioIdExclusao);
            await CarregarUsuarios();
            // Notificação de sucesso
        }
        else
        {
            // Notificação de erro
        }
        modalExclusao = false;
    }

    private void ConfirmarEdicao(Guid usuarioId)
    {
        usuarioIdEdicao = usuarioId;
        modalEdicao = true;
    }

    private void CancelarEdicao()
    {
        modalEdicao = false;
    }

    private async Task ConfirmarEdicaoUsuario()
    {
        var response = await HttpClient.PutAsync($"usuario/alterar-visibilidade/{usuarioIdEdicao}", null);
        if (response.IsSuccessStatusCode)
        {
            var usuario = _listUsuarioListarResponse.FirstOrDefault(u => u.Id == usuarioIdEdicao);
            if (usuario != null)
            {
                usuario.EhAdmin = !usuario.EhAdmin;
            }
            // Notificação de sucesso
        }
        else
        {
            // Notificação de erro
        }
        modalEdicao = false;
    }
}
